<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at
    
     http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.sonatype.gshell</groupId>
        <artifactId>gshell</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>

    <artifactId>gshell-core</artifactId>
    <name>GShell :: Core</name>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>jline</groupId>
            <artifactId>jline</artifactId>
        </dependency>

        <dependency>
            <groupId>org.fusesource.jansi</groupId>
            <artifactId>jansi</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.codehaus.plexus</groupId>
            <artifactId>plexus-interpolation</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-jexl</groupId>
            <artifactId>commons-jexl</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>javacc-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>jjtree-javacc</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${project.basedir}/src/main/grammar</sourceDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>shrink</id>
            <activation>
                <property>
                    <name>shrink</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <archive>
                                <addMavenDescriptor>false</addMavenDescriptor>
                            </archive>
                            <excludes>
                                <exclude>META-INF/DEPENDENCIES</exclude>
                                <exclude>META-INF/LICENSE</exclude>
                                <exclude>META-INF/NOTICE</exclude>
                            </excludes>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>2.1</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.codehaus.groovy.maven</groupId>
                        <artifactId>gmaven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <source>
                                        // Build the correct classpath for the valid bootstrap jars for ProGuard
                                        def path = System.getProperty('sun.boot.class.path')
                                        def files = []
                                        path.split(File.pathSeparator).each {
                                            def file = new File(it)
                                            if (file.exists()) {
                                                files.add(file)
                                            }
                                        }
                                        project.properties.setProperty('proguard.java.classpath', files.join(File.pathSeparator))
                                    </source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.3</version>
                        <dependencies>
                            <dependency>
                                <groupId>net.sf.proguard</groupId>
                                <artifactId>proguard</artifactId>
                                <version>4.4</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <taskdef resource="proguard/ant/task.properties"/>

                                        <proguard><![CDATA[
                                            -basedirectory ${project.build.directory}
                                            -injars ${project.build.finalName}.${project.packaging}
                                            -outjars ${project.build.finalName}-shrunk.${project.packaging}

                                            -libraryjars ${proguard.java.classpath}
                                            -libraryjars dependency

                                            -target 1.5
                                            -printmapping proguard.map
                                            -forceprocessing
                                            -optimizationpasses 3

                                            -dontnote

                                            -renamesourcefileattribute SourceFile
                                            -keepattributes InnerClasses,SourceFile,LineNumberTable
                                            -keepattributes *Annotation*
                                            -keepattributes EnclosingMethod

                                            -keepclassmembers enum * {
                                                public static **[] values();
                                                public static ** valueOf(java.lang.String);
                                            }

                                            -keepclassmembernames class * {
                                                java.lang.Class class$(java.lang.String);
                                                java.lang.Class class$(java.lang.String, boolean);
                                            }

                                            -keep class org.sonatype.gshell.**

                                            -keep public class org.sonatype.gshell.console.*,org.sonatype.gshell.i18n.* {
                                                public <methods>;
                                            }

                                            -keep public class org.sonatype.gshell.core.MainSupport,org.sonatype.gshell.core.BrandingSupport {
                                                public protected <fields>;
                                                public protected <methods>;
                                            }

                                            -keep public class org.sonatype.gshell.ansi.Ansi {
                                                public <methods>;
                                            }

                                            -keep public class org.sonatype.gshell.cli.handler.* {
                                                <init>(...);
                                            }

                                            -keep public class org.sonatype.gshell.core.console.* {
                                                public <methods>;
                                            }

                                            -keep public class org.sonatype.gshell.core.simple.* {
                                                public <methods>;
                                            }

                                            -keep public class org.sonatype.gshell.core.commands.*,org.sonatype.gshell.core.command.CommandHelpSupport {
                                                public protected private <fields>;
                                                public protected private <methods>;
                                            }
                                        ]]></proguard>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>

